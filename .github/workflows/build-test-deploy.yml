#
# SPDX-FileCopyrightText: 2023 Lifely
# SPDX-License-Identifier: EUPL-1.2+
#
name: Build, test & deploy

on:
  pull_request:
  merge_group:
  workflow_dispatch:
  push:
    branches:
      - main

# cancel any previous runs of this workflow for this branch that are still in progress
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: '21'
  CONTAINER_REGISTRY_URL: 'ghcr.io/infonl'
  APPLICATION_NAME: 'zaakafhandelcomponent'

permissions:
  contents: write
  packages: write
  checks: write
  pull-requests: write
  # Required for uploading SARIF reports
  security-events: write

jobs:
  paths-ignore:
    runs-on: ubuntu-22.04
    outputs:
      skip: ${{ steps.paths-ignore.outputs.skip }}
    steps:
      - name: Skip job when only Markdown files are changed
        uses: kunitsucom/github-actions-paths-ignore-alternative@3800eba25a9d716029cd1db0439cb9194431cc5c # v0.0.4
        id: paths-ignore
        with:
          paths-ignore: |-
            ^.*\.md$

  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: paths-ignore
    if: ${{ needs.paths-ignore.outputs.skip != 'true' || github.ref == 'refs/heads/main'}}
    outputs:
      branch_name: ${{ steps.gen_branch_name.outputs.BRANCH_NAME }}
      build_number: ${{ steps.gen_build_number.outputs.BUILD_NUMBER }}
      zac_docker_image: ${{ steps.gen_tag.outputs.ZAC_DOCKER_IMAGE }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set branch name
        id: gen_branch_name
        run: echo "BRANCH_NAME=${{ github.ref_name }}" | sed 's/\//_/g; s/(//g; s/)//g' >> $GITHUB_OUTPUT

      - name: Set build number
        id: gen_build_number
        run: echo "BUILD_NUMBER=${{ steps.gen_branch_name.outputs.BRANCH_NAME }}-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Set Docker image tag
        id: gen_tag
        run: echo "ZAC_DOCKER_IMAGE=${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ steps.gen_build_number.outputs.BUILD_NUMBER }}" >> $GITHUB_OUTPUT

      - name: Setup JDK
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          # Use the Maven cache here so that Maven artefacts (Maven build is triggered from the Gradle build) are cached.
          cache: 'maven'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@cc4fc85e6b35bafd578d5ffbc76a5518407e1af0 # v4.2.1

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@cc4fc85e6b35bafd578d5ffbc76a5518407e1af0 # v4.2.1

      # The Gradle build also executes a Maven command to build the WildFly bootable JAR.
      # Disable the Gradle Configuration Cache for now because we sometimes run into a similar issue to:
      # https://github.com/diffplug/spotless/issues/651
      - name: Gradle build
        run: ./gradlew build -x test --info --no-configuration-cache

      - name: Cache Gradle build artefacts
        uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            build
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache generated Java clients
        uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            src/generated
          key: generated-java-clients-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache built frontend artefacts
        uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            src/main/app/dist/zaakafhandelcomponent
            src/main/app/src/generated/types
          key: built-frontend-artefacts-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Cache built ZAC JAR
        uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: |
            target/zaakafhandelcomponent.jar
          key: zac-jar-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

  next-version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.get-version.outputs.replaced }}
      tag: ${{ steps.get-tag.outputs.new_tag }}
    steps:
      # Checkout the repository including tags
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      # Determine the next semantic version based on the commit message tags
      - name: Get next tag
        id: get-tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297 # 1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: false
          DEFAULT_BUMP: patch
          WITH_V: true
          RELEASE_BRANCHES: main
      - name: Get next version
        id: get-version
        uses: frabert/replace-string-action@b6828c5a4cb6371753ff873b0d1c4c4fbd9a63cb # v2.5
        with:
          pattern: 'v(.*)'
          string: ${{ steps.get-tag.outputs.new_tag }}
          replace-with: '$1'
      - name: Print new tag and version
        run: |
          echo "Next version: ${{ steps.get-version.outputs.replaced }}"
          echo "Next version tag: ${{ steps.get-tag.outputs.new_tag }}"

  create-release:
    needs: [next-version]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    env:
      NEXT_VERSION: ${{ needs.next-version.outputs.version }}
      NEXT_VERSION_TAG: ${{ needs.next-version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Create or update GitHub release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEXT_VERSION_TAG }}
          name: ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }}
          body: |
            This release contains the docker image ${{ env.APPLICATION_NAME }} ${{ env.NEXT_VERSION }}, which is available
            at ${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ env.NEXT_VERSION }}
          draft: false
          prerelease: false
          allowUpdates: true
          makeLatest: true
          generateReleaseNotes: true
      - name: Update publiccode.yaml
        uses: OpenCatalogi/publiccode-action@latest
        with:
          git-name: github-actions
          git-mail: github-actions@github.com
